{"version":3,"sources":["hooks/useInput.js","redux/reducers/employeeReducer.js","img/simplelogo.png","Components/Authentication/Authentication.js","redux/reducers/customerReducer.js","Components/Customers/Customers.js","Components/Customers/EditCustomer.js","redux/reducers/productReducer.js","Components/Employee/Checkout/Sidebar/Sidebar.js","Components/Employee/Checkout/Cart/Cart.js","Components/Employee/Checkout/Checkout.js","redux/reducers/transactionsReducer.js","Components/Transactions/OneTransaction/OneTransaction.js","Components/Transactions/OneTransaction/Printer.js","Components/Transactions/Transactions.js","Components/Employee/Payment/Cash/Cash.js","Components/Employee/Payment/Payment.js","Components/Employee/Payment/Receipt/RobotoMono-Regular.ttf","Components/Employee/Payment/Receipt/Receipt.js","Components/Employee/Payment/Receipt/PdfTest.js","Components/Admin/Admin.js","Components/Admin/AddProduct.js","Components/Admin/Product.js","Components/Admin/ManageProducts.js","Components/Admin/AddEmployee.js","Components/Admin/DeleteEmployee.js","routes.js","Components/Header/Header.js","App.js","serviceWorker.js","redux/reducers/searchReducer.js","redux/store.js","index.js"],"names":["useInput","initialValue","useState","value","setValue","onChange","e","target","initialState","employee","GET_EMPLOYEE","DEL_EMPLOYEE","getEmployee","employeeObj","type","payload","connect","props","username","bindUsername","resetUsername","password","bindPassword","resetPassword","className","id","src","MonetaLogo","alt","height","placeholder","onClick","axios","post","then","res","data","history","push","customer","GET_CUSTOMER","getCustomer","customerObj","reduxState","editUser","setEditUser","sessCust","setSessCust","email","setEmail","phone","setPhone","first_name","setfirst_name","last_name","setlast_name","MySwal","withReactContent","Swal","useEffect","getSessCustomer","c_id","length","get","addCustomer","fire","icon","title","console","clear","log","style","marginTop","Table","striped","bordered","hover","sort","a","b","t_id","map","t","i","t_date","key","onDoubleClick","withRouter","filter","ele","match","params","currentCustomer","transactions","setTransactions","sorter","setSorter","defaultSort","toggleDefaultSort","asc","toggleAsc","isPaid","toggleIsPaid","getTransactions","catch","err","put","total","paid","dateFormat","products","loading","GET_PRODUCTS","EDIT_PRODUCT","DELETE_PRODUCT","getProducts","renderTypeFn","remove","setRemove","selProd","setSelProd","subtotal","setSubtotal","setTotal","tax","setTax","sub","cart","reduce","acc","price","toFixed","removeFromCart","num","splice","Axios","setCart","item","selectProduct","index","name","marginRight","display","justifyContent","product","setType","getAllProducts","getCart","addToCart","p","paddingTop","p_type","available","onDragEnd","p_image","color","size","GET_TRANSACTIONS","OneTransaction","componentDidMount","getOneTransaction","setState","transaction","state","printContent","el","restorepage","document","body","innerHTML","printcontent","getElementById","window","print","location","reload","this","o","ac","cv","parseInt","Component","Printer","trigger","content","componentRef","ref","transactionsArr","selectedTransaction","showOneTransaction","aToZ","toggleAToZ","amount","setAmount","order","setResFn","clearCartFn","readOnly","Money","newTotal","Twenty","Math","floor","Ten","Five","One","Quarter","Dime","Nickel","obj","Penny","myChange","Object","keys","k","togglePaidFn","setChangeFn","customerChange","toggleCashFn","injectStripe","setOrder","orderChange","setOrderChange","cash","setCash","cashPaid","setCashPaid","response","setResponse","submit","stripe","createToken","token","text","clearCart","delete","toggleCash","margin","left","duration","fontSize","fontWeight","goBack","Font","register","family","fonts","font","Receipt","styles","StyleSheet","create","oneTransactionContainer","boxSizing","receiptContainer","flexDirection","alignItems","width","minHeight","receiptItemAndPrice","allReceiptItems","borderTop","borderBottom","padding","subtotalTotalContainer","PdfTest","page","section","flexGrow","MyDocument","is_admin","to","from","AddProduct","bindName","resetName","bindP_image","resetP_image","bindPrice","resetPrice","setAvailable","selected","htmlFor","edit","isEditing","setName","setP_image","setPrice","editItem","setEditItem","cancel","p_id","editProduct","handleSave","error","AddEmployee","bindUserName","setIsAdmin","users","setUsers","getAllEmployees","user","for","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","user_id","exact","path","component","Authentication","EditCustomer","Customers","Checkout","Transactions","Payment","Admin","ManageProducts","DeleteEmployee","pathname","routes","Boolean","hostname","search","rootReducer","combineReducers","action","createStore","composeWithDevTools","applyMiddleware","promiseMiddleware","ReactDOM","render","apiKey","process","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6caf77b3.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\nconst useInput = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const reset = () => {\r\n        setValue(initialValue)\r\n    }\r\n    const bind = {\r\n        value,\r\n        onChange: e => {\r\n            setValue(e.target.value)\r\n        }\r\n    }\r\n    return [value, bind, reset]\r\n}\r\n\r\nexport default useInput;","const initialState = {\r\n    employee: {}\r\n};\r\n\r\nconst GET_EMPLOYEE = 'GET_EMPLOYEE';\r\nconst DEL_EMPLOYEE = 'DEL_EMPLOYEE';\r\n\r\nexport function getEmployee(employeeObj){\r\n\r\n    return {\r\n        type: GET_EMPLOYEE,\r\n        payload: employeeObj\r\n    }\r\n}\r\n\r\nexport function delEmployee(employee){\r\n    return {\r\n        type: DEL_EMPLOYEE,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport default function employeeReducer(state = initialState, action){\r\n    const {type, payload} = action;\r\n    switch(type){\r\n        case GET_EMPLOYEE:\r\n            return {...state, employee: payload}\r\n\r\n        case DEL_EMPLOYEE:\r\n            return {...state, employee: {}}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/simplelogo.7d7d6adf.png\";","import React from 'react';\r\nimport './authentication.scss';\r\nimport useInput from '../../hooks/useInput';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {getEmployee} from '../../redux/reducers/employeeReducer';\r\nimport MonetaLogo from '../../img/simplelogo.png';\r\n\r\nconst Authentication = (props) => {\r\n    const [username, bindUsername, resetUsername] = useInput('');\r\n    const [password, bindPassword, resetPassword] = useInput('');\r\n\r\n    let login = () => {\r\n        axios.post('/api/auth/login', {username: username, password: password}).then(res => {\r\n            props.getEmployee(res.data);\r\n            props.history.push('/checkout')\r\n            resetUsername()\r\n            resetPassword()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='auth'>\r\n            <div className='auth-flex'>\r\n                <div id='logo-flex'>\r\n                    <img src={MonetaLogo} alt='logo' height='100px'/>\r\n                </div>\r\n                <div className='auth-container'>\r\n                    <div className='welcome'>\r\n                        <div>Welcome back to Moneta!</div>\r\n                        <h2>Log in to get started<i className='right'></i></h2>\r\n                    </div>\r\n                    <div className='login'>\r\n                        <h1>sign in</h1>\r\n                        <div>\r\n                            <input \r\n                                {...bindUsername}\r\n                                type='text'\r\n                                placeholder='username'\r\n                            />\r\n                            <input \r\n                                {...bindPassword}\r\n                                type='password'\r\n                                placeholder='password'\r\n                            />\r\n                        </div>\r\n                        <button onClick={login}>login</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {getEmployee})(Authentication);","const initialState = {\r\n    customer: []\r\n}\r\n\r\nconst GET_CUSTOMER = 'GET_CUSTOMER';\r\n\r\nexport function getCustomer(customerObj){\r\n    return {\r\n        type: GET_CUSTOMER,\r\n        payload: customerObj\r\n    }\r\n}\r\n\r\nexport default function customerReducer(state = initialState, action){\r\n    const {type, payload} = action;\r\n    switch(type){\r\n        case GET_CUSTOMER:\r\n            return {...state, customer: payload}\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCustomer } from \"../../redux/reducers/customerReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./customers.scss\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst Customers = props => {\r\n  const [editUser, setEditUser] = useState(false);\r\n  const [sessCust, setSessCust] = useState({});\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [first_name, setfirst_name] = useState(\"\");\r\n  const [last_name, setlast_name] = useState(\"\");\r\n\r\n  const MySwal = withReactContent(Swal);\r\n  //onClick={() => setEditUser(!editUser)}\r\n  // {editUser ? () : ()}\r\n\r\n  useEffect(() => {\r\n    getCustomer();\r\n    getSessCustomer();\r\n  }, [sessCust.c_id, props.customer.customer.length]);\r\n\r\n  let clearInput = () => {\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setfirst_name(\"\");\r\n    setlast_name(\"\");\r\n  };\r\n\r\n  let getCustomer = () => {\r\n    axios.get(\"/api/customer\").then(res => {\r\n      props.getCustomer(res.data);\r\n    });\r\n  };\r\n\r\n  let addCustomer = () => {\r\n    axios\r\n      .post(\"/api/customer\", { email, phone, first_name, last_name })\r\n      .then(res => {\r\n        getCustomer();\r\n        clearInput();\r\n        MySwal.fire({\r\n          icon: \"success\",\r\n          title: \"Customer Added\"\r\n        });\r\n      });\r\n  };\r\n\r\n  let getSessCustomer = () => {\r\n    axios.get(\"/api/customerSess\").then(res => {\r\n      setSessCust(res.data);\r\n    });\r\n  };\r\n\r\n  let passId = c_id => {\r\n    axios.get(`/api/customer/${c_id}`).then(res => {\r\n      getSessCustomer(res.data);\r\n      props.history.push('/checkout');\r\n      //   console.log(c_id);\r\n      //   console.log(res.data);\r\n    });\r\n  };\r\n\r\n  //   console.log(props);\r\n  //   console.log(editUser);\r\n  console.clear();\r\n  console.log(sessCust);\r\n  return (\r\n    <div style={{ marginTop: \"60px\" }}>\r\n      {editUser ? (\r\n        <div className = 'add-form'>\r\n          <span>EMAIL:</span>{\" \"}\r\n          <input\r\n            className=\"customer-input\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          ></input>\r\n          <br />\r\n          <span>PHONE:</span>{\" \"}\r\n          <input\r\n            className=\"customer-input\"\r\n            value={phone}\r\n            onChange={e => setPhone(e.target.value)}\r\n          ></input>\r\n          <br />\r\n         <span> FIRST NAME:</span>{\" \"}\r\n          <input\r\n            className=\"customer-input\"\r\n            value={first_name}\r\n            onChange={e => setfirst_name(e.target.value)}\r\n          ></input>\r\n          <br />\r\n          <span>LAST NAME:</span>{\" \"}\r\n          <input\r\n            className=\"customer-input\"\r\n            value={last_name}\r\n            onChange={e => setlast_name(e.target.value)}\r\n          ></input>\r\n          <br />\r\n          <button\r\n          className='save-button'\r\n            onClick={() => {\r\n              addCustomer();\r\n              setEditUser(!editUser);\r\n            }}\r\n          >\r\n            SAVE\r\n          </button>\r\n      \r\n        </div>\r\n      ) : (\r\n        <button className='other-buttons' onClick={() => setEditUser(!editUser)}>ADD CUSTOMER</button>\r\n      )}\r\n\r\n      <Table style={{ marginTop: \"50px\" }} striped bordered hover>\r\n        {/* <div > */}\r\n        <thead>\r\n          <tr>\r\n            <th>Email</th>\r\n            <th>Phone</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Add Customer to Order</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.customer.customer[0] &&\r\n            props.customer.customer\r\n              .sort((a, b) => a.t_id - b.t_id)\r\n              .map((t, i) => {\r\n                console.log(typeof t.t_date);\r\n                return (\r\n                  <tr\r\n                    key={i}\r\n                    onDoubleClick={() =>\r\n                      props.history.push(`/customers/${t.c_id}`)\r\n                    }\r\n                  >\r\n                    {/* <td onDoubleClick={() => props.history.push(`/customers/${t.c_id}`)}>}Customer ID:{t.c_id}</td> */}\r\n                    <td>{t.email}</td>\r\n                    <td>{t.phone}</td>\r\n                    <td>{t.first_name}</td>\r\n                    <td>{t.last_name}</td>\r\n                    <td>\r\n                      <button className='other-buttons' onClick={() => passId(t.c_id)}>Add To Order</button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n        </tbody>\r\n        {/* </div> */}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\n\r\nexport default connect(mapStateToProps, { getCustomer })(Customers);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getCustomer } from \"../../redux/reducers/customerReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./customers.scss\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport dateFormat from \"dateformat\";\r\n// import Printer from \"../Transactions/OneTransaction/Printer\";\r\n\r\nconst EditCustomer = props => {\r\n  const [editUser, setEditUser] = useState(false);\r\n  let [currentCustomer] = props.customer.customer.filter(\r\n    ele => +ele.c_id === +props.match.params.c_id\r\n  );\r\n  const [email, setEmail] = useState(currentCustomer.email);\r\n  const [phone, setPhone] = useState(currentCustomer.phone);\r\n  const [first_name, setfirst_name] = useState(currentCustomer.first_name);\r\n  const [last_name, setlast_name] = useState(currentCustomer.last_name);\r\n  console.log(email);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [sorter, setSorter] = useState({ sorter: () => {} });\r\n  const [defaultSort, toggleDefaultSort] = useState(true);\r\n  const [asc, toggleAsc] = useState(false);\r\n  const [isPaid, toggleIsPaid] = useState(false);\r\n  useEffect(() => {\r\n    getTransactions();\r\n  }, []);\r\n  console.log(transactions);\r\n  useEffect(() => {\r\n    console.log(\"sorter\", sorter);\r\n  }, [sorter]);\r\n  const getTransactions = () => {\r\n    axios\r\n      .get(`/api/transactions/customer/${props.match.params.c_id}`)\r\n      .then(res => {\r\n        setTransactions(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  let editCustomer = () => {\r\n    axios\r\n      .put(`/api/customer/${props.match.params.c_id}`, {\r\n        email,\r\n        phone,\r\n        first_name,\r\n        last_name\r\n      })\r\n      .then(res => {\r\n        props.history.push(\"/customers\");\r\n      });\r\n  };\r\n\r\n  console.log(props);\r\n  return (\r\n      \r\n    <div className=\"customers-page\">\r\n        <h1>{first_name} {last_name}</h1>\r\n      {editUser ? (\r\n        <div className=\"edit-form\">\r\n          <div className=\"form-row\">\r\n            <span>EMAIL: </span>{\" \"}\r\n            <input\r\n              className=\"customer-input\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <span>PHONE:</span>{\" \"}\r\n            <input\r\n              className=\"customer-input\"\r\n              value={phone}\r\n              onChange={e => setPhone(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <span>FIRST NAME:</span>{\" \"}\r\n            <input\r\n              className=\"customer-input\"\r\n              value={first_name}\r\n              onChange={e => setfirst_name(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <span>LAST NAME:</span>{\" \"}\r\n            <input\r\n              className=\"customer-input\"\r\n              value={last_name}\r\n              onChange={e => setlast_name(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <button className=\"save-button\" onClick={() => editCustomer()}>\r\n            SAVE EDIT\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <button\r\n          className=\"edit-customer-button\"\r\n          onClick={() => setEditUser(!editUser)}\r\n        >\r\n          EDIT CUSTOMER\r\n        </button>\r\n      )}\r\n      <div className=\"whole-table\" >\r\n        <Table  striped bordered hover>\r\n          <thead>\r\n            <tr className=\"header-row\">\r\n              <th\r\n                onClick={() => {\r\n                  toggleDefaultSort(!defaultSort);\r\n                  setSorter({ sorter: (a, b) => a.t_id - b.t_id });\r\n                }}\r\n              >\r\n                ID\r\n              </th>\r\n\r\n              <th\r\n                onClick={() => {\r\n                  if (asc) {\r\n                    toggleDefaultSort(false);\r\n                    setSorter({ sorter: (a, b) => b.total - a.total });\r\n                    toggleAsc(false);\r\n                  } else {\r\n                    toggleDefaultSort(false);\r\n                    setSorter({ sorter: (a, b) => a.total - b.total });\r\n                    toggleAsc(true);\r\n                  }\r\n                }}\r\n              >\r\n                Total\r\n              </th>\r\n              <th\r\n                onClick={() => {\r\n                  if (isPaid) {\r\n                    toggleDefaultSort(false);\r\n                    setSorter({ sorter: (a, b) => b.paid - a.paid });\r\n                  }\r\n                }}\r\n              >\r\n                Paid\r\n              </th>\r\n              <th\r\n                onClick={() => {\r\n                  if (isPaid) {\r\n                    toggleDefaultSort(!defaultSort);\r\n                    setSorter({ sorter: (a, b) => a.t_id - b.t_id });\r\n                    toggleIsPaid(false);\r\n                  } else {\r\n                    toggleDefaultSort(!defaultSort);\r\n                    setSorter({ sorter: (a, b) => b.t_id - a.t_id });\r\n                    toggleIsPaid(true);\r\n                  }\r\n                }}\r\n              >\r\n                Time\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions[0] &&\r\n              transactions\r\n                .sort(defaultSort ? (a, b) => b.t_id - a.t_id : sorter.sorter)\r\n                .map((t, i) => {\r\n                  console.log(typeof t.t_date);\r\n                  return (\r\n                    <tr\r\n                      onClick={() => {\r\n                        props.history.push(`/transactions/${t.t_id}`);\r\n                      }}\r\n                      key={i}\r\n                    >\r\n                      <td>{t.t_id}</td>\r\n                      <td>${t.total}</td>\r\n                      <td>{t.paid ? \"True\" : \"False\"}</td>\r\n                      <td>{dateFormat(t.t_date, \"m/d/yy h:MM TT\")}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getCustomer })(EditCustomer)\r\n);\r\n","import axios from 'axios';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    loading: false\r\n}\r\n\r\nconst GET_PRODUCTS = 'GET_PRODUCTS';\r\nconst EDIT_PRODUCT = 'EDIT_PRODUCT';\r\nconst DELETE_PRODUCT = 'DELETE_PRODUCT';\r\n\r\nexport function getProducts(){\r\n    let data = axios.get(\"/api/product\").then(res => res.data)\r\n    return {\r\n        type: GET_PRODUCTS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function editProduct(products){\r\n    return {\r\n        type: EDIT_PRODUCT,\r\n        payload: products\r\n    }\r\n}\r\n\r\nexport function deleteProduct(product){\r\n    return {\r\n        type: DELETE_PRODUCT,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport default function productReducer(state = initialState, action){\r\n    const {type, payload} = action;\r\n    switch(type){\r\n        case GET_PRODUCTS + '_PENDING':\r\n            return {...state, loading: true}\r\n        case GET_PRODUCTS + '_FULFILLED':\r\n            return {...state, products: payload, loading: false}\r\n        \r\n        case EDIT_PRODUCT:\r\n            return {...state, products: payload}\r\n\r\n        case DELETE_PRODUCT:\r\n            return {...state, products: {}}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Sidebar = props => {\r\n  \r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <section className='options-container'>\r\n        <span className=\"sidebar-options\" onClick={() => props.renderTypeFn('scoops')}>scoops</span>\r\n        <span className=\"sidebar-options\"  onClick={() => props.renderTypeFn('soft-serve')}>soft-serve</span>\r\n        <span className=\"sidebar-options\"  onClick={() => props.renderTypeFn('toppings')}>toppings</span>\r\n        <span className=\"sidebar-options\"  onClick={() => props.renderTypeFn('cones')}>cones</span>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Cart = props => {\r\n  const [remove, setRemove] = useState(false);\r\n  const [selProd, setSelProd] = useState(null);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [tax, setTax] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    let sub = props.cart[0] && props.cart.reduce((acc, b) => acc + +b.price, 0).toFixed(2)\r\n    setSubtotal(sub)\r\n    setTax((sub*.088).toFixed(2))\r\n    setTotal((sub*1.088).toFixed(2))\r\n\r\n  },[props.cart.length])\r\n\r\n  const removeFromCart = async (i, num) => {\r\n    await props.cart.splice(i, num);\r\n    Axios.put(\"/api/co/cart\", props.cart).then(res => props.setCart(res.data));\r\n  };\r\n  const toggleRemove = () => {\r\n    setRemove(!remove);\r\n  };\r\n  const selectProduct = i => {\r\n    setSelProd(i);\r\n    setRemove(!remove);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <section className=\"cart-items\">\r\n        {props.cart[0] &&\r\n          props.cart.map((item, i) => {\r\n            return (\r\n              <div onClick={() => selectProduct(i)} id=\"item\" index={i} key={i}>\r\n                <span id=\"item-name\">{item.name}</span>\r\n                <section id=\"price-button\">\r\n                  <span style={{ marginRight: \"10px\" }}>${item.price}</span>\r\n\r\n                  {remove ? (\r\n                    selProd === i ? (\r\n                      <button\r\n                        id=\"remove-item\"\r\n                        onClick={() => removeFromCart(i, 1)}\r\n                      >\r\n                        X\r\n                      </button>\r\n                    ) : null\r\n                  ) : null}\r\n                </section>\r\n              </div>\r\n            );\r\n          })}\r\n      </section>\r\n\r\n      <strong className=\"checkout-total\">\r\n        Subtotal: {props.cart[0] ? `$${subtotal}` : '$0'} \r\n      </strong>\r\n      <strong className=\"checkout-total\">\r\n        Tax: {props.cart[0] ? `$${tax}` : '$0'} \r\n      </strong>\r\n      <strong className=\"checkout-total\">\r\n        Total: {props.cart[0] ? `$${total}` : '$0'} \r\n      </strong>\r\n      <div className=\"selected-customer-container\">\r\n        <span>Customer: </span>\r\n        <span>\r\n          {props.employee.employee.customer &&\r\n            props.employee.employee.customer.first_name}{\" \"}\r\n          {props.employee.employee.customer &&\r\n            props.employee.employee.customer.last_name}\r\n        </span>\r\n        <button onClick={() => props.history.push('/customers')} className='add-customer-button'>ADD CUSTOMER</button>\r\n      </div>\r\n      {/* <section>\r\n        discount code\r\n        <input type=\"text\" />f\r\n        <button>Submit</button>\r\n      </section> */}\r\n      <section\r\n        style={{\r\n          display: \"flex\",\r\n          marginTop: \"10px\",\r\n          justifyContent: \"space-between\"\r\n        }}\r\n      >\r\n        <button\r\n          className=\"clear-button\"\r\n          onClick={() => removeFromCart(0, props.cart.length)}\r\n        >\r\n          CLEAR\r\n        </button>\r\n        <button\r\n          className=\"checkout-button\"\r\n          onClick={() => props.history.push(\"/payment\")}\r\n        >\r\n          CHECKOUT\r\n        </button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\nexport default withRouter(connect(mapStateToProps)(Cart));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./checkout.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"./../../../redux/reducers/productReducer\";\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\nimport Cart from \"./Cart/Cart\";\r\nimport {css} from '@emotion/core';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\n\r\nconst Checkout = props => {\r\n  const { products } = props.product;\r\n  const [cart, setCart] = useState([]);\r\n  const [type, setType] = useState(\"scoops\");\r\n\r\n  useEffect(() => {\r\n    getAllProducts();\r\n  }, [products.length]);\r\n\r\n  useEffect(() => {\r\n    getCart();\r\n  }, []);\r\n\r\n  let getAllProducts = () => {\r\n    axios.get(\"/api/product\").then(res => props.getProducts(res.data));\r\n  };\r\n\r\n  const addToCart = p => {\r\n    axios\r\n      .post(\"/api/co/cart\", p)\r\n      .then(res => getCart())\r\n      .catch(err => console.log(err));\r\n  };\r\n  const getCart = () => {\r\n    axios\r\n      .get(\"/api/co/cart\")\r\n      .then(res => {\r\n        setCart(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const renderType = p_type => {\r\n    setType(p_type);\r\n  };\r\n\r\n  console.log(props)\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"50px\" }} className=\"checkout-container\">\r\n      <Sidebar renderTypeFn={renderType} />\r\n      <div className=\"all-products-container\">\r\n        {products[0] ? (\r\n          products\r\n            .filter(p => {\r\n              return p.p_type === type && p.available;\r\n            })\r\n            .map((p, i) => {\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  onClick={() => {\r\n                    addToCart(p);\r\n                  }}\r\n                  onDragEnd={() => addToCart(p)}\r\n                  className=\"product-container\"\r\n                >\r\n                  <img className=\"product-image\" src={p.p_image} alt=\"\" />\r\n                  <section className=\"product-text\">\r\n                    <span className=\"product-name\">{p.name}</span>\r\n                    <span className=\"product-price\">${p.price}</span>\r\n                  </section>\r\n                </div>\r\n              );\r\n            })\r\n        ) : (\r\n          <div>\r\n            <ClipLoader \r\n              color={'#408dff'}\r\n              loading={props.product.loading}\r\n              size={300}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Cart setCart={setCart} cart={cart} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\nexport default connect(mapStateToProps, { getProducts })(Checkout);\r\n","const initialState = {\r\n    transactions: []\r\n}\r\n\r\nconst GET_TRANSACTIONS = 'GET_TRANSACTIONS';\r\n\r\nexport function getTransactions(transactionsArr){\r\n    return {\r\n        type: GET_TRANSACTIONS,\r\n        payload: transactionsArr\r\n    }\r\n}\r\n\r\nexport default function transactionsReducer(state = initialState, action){\r\n    const {type, payload} = action;\r\n    switch(type){\r\n        case GET_TRANSACTIONS:\r\n            return {...state, transactions: payload}\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"./OneTransaction.scss\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nclass OneTransaction extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      transaction: []\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.getOneTransaction();\r\n  };\r\n  getOneTransaction = () => {\r\n    Axios.get(`/api/transactions/${this.props.match.params.t_id}`).then(res => {\r\n      this.setState({ transaction: res.data });\r\n      console.log(this.state.transaction);\r\n    });\r\n  };\r\n  printContent = async el => {\r\n    var restorepage = document.body.innerHTML;\r\n    var printcontent = document.getElementById(el).innerHTML;\r\n    document.body.innerHTML = printcontent;\r\n    window.print();\r\n\r\n    document.body.innerHTML = restorepage;\r\n\r\n    this.props.history.push('/checkout')\r\n    //  this.forceUpdate()\r\n\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    console.log(this.props);\r\n    const { transaction } = this.state;\r\n    return (\r\n      <div className=\"one-transaction-container\">\r\n        <button\r\n          className=\"print-button\"\r\n          onClick={() => this.printContent(\"receipt\")}\r\n        >\r\n          Print\r\n        </button>\r\n        {transaction[0] ? (\r\n          <div id=\"receipt\" className=\"receipt-container\">\r\n            <div>Receipt #{transaction[0].t_id}</div>\r\n            <div>\r\n              Customer:{\" \"}\r\n              {transaction[0].first_name.length > 0 ? (\r\n                <div>\r\n                  {transaction[0].first_name + \" \" + transaction[0].last_name}\r\n                </div>\r\n              ) : (\r\n                \"None\"\r\n              )}\r\n            </div>\r\n            <div>{dateFormat(transaction.t_date, \"m/d/yy h:MM TT\")}</div>\r\n            <div className=\"all-receipt-items\">\r\n              {transaction.map((o, i) => {\r\n                return (\r\n                  <div className=\"receipt-item-and-price\">\r\n                    <span>{o.name}</span>\r\n                    <span>${o.price}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"subtotal-total-container\">\r\n              <span>\r\n                Subtotal: $\r\n                {transaction\r\n                  .reduce((ac, cv) => {\r\n                    return ac + parseInt(cv.price);\r\n                  }, 0)\r\n                  .toFixed(2)}\r\n              </span>\r\n              <span>\r\n                Tax: $\r\n                {(\r\n                  +transaction[0].total -\r\n                  transaction.reduce((ac, cv) => {\r\n                    return ac + parseInt(cv.price);\r\n                  }, 0)\r\n                ).toFixed(2)}\r\n              </span>\r\n              <span>\r\n                <strong>Total: ${transaction[0].total}</strong>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <span>loading...</span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(OneTransaction);\r\n","import React, { useState, useEffect, useRef, Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport OneTransaction from './OneTransaction.js'\r\nimport { render } from \"react-dom\";\r\n\r\n\r\nexport class Printer extends Component {\r\n    render() {\r\n      return (\r\n        <div style={{ marginTop: \"50px\" }}>\r\n          <ReactToPrint\r\n            trigger={() => <button>Print this out!</button>}\r\n            content={() => this.componentRef}\r\n          />\r\n          <OneTransaction transaction={this.props.transaction} ref={el => (this.componentRef = el)} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  export default Printer;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTransactions } from \"./../../redux/reducers/transactionsReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport dateFormat from \"dateformat\";\r\nimport Printer from \"./OneTransaction/Printer\";\r\nimport './Transactions.scss'\r\n\r\nconst Transactions = props => {\r\n  \r\n  // const idSort = (a, b) => b.t_id - a.t_id\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [selectedTransaction, selectTransaction] = useState();\r\n  const [showOneTransaction, toggleShowOT] = useState(false);\r\n  const [sorter, setSorter]  = useState({sorter: () => {}})\r\n  const [defaultSort, toggleDefaultSort]  = useState(true)\r\n  const [aToZ, toggleAToZ]  = useState(false)\r\n  const [asc, toggleAsc]  = useState(false)\r\n  const [isPaid, toggleIsPaid] = useState(false)\r\n  useEffect(() => {\r\n    getTransactions();\r\n  }, []);\r\n  console.log(transactions)\r\n  useEffect(() => {\r\nconsole.log('sorter', sorter)\r\n  },[sorter])\r\n  const getTransactions = () => {\r\n    axios\r\n      .get(\"/api/transactions\")\r\n      .then(res => {\r\n        // props.getTransactions(res.data)\r\n        setTransactions(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  console.log(props);\r\n  return (\r\n    <div className='whole-table'\r\n     style={{ marginTop: \"50px\" }}>\r\n      {showOneTransaction ? (\r\n        <Printer transaction={selectedTransaction} />\r\n      ) : (\r\n        <Table striped bordered hover>\r\n          {/* <div > */}\r\n          <thead>\r\n            <tr className='header-row'>\r\n              <th\r\n              \r\n               onClick={() => {\r\n                toggleDefaultSort(!defaultSort)\r\n                setSorter({sorter: (a,b) => a.t_id - b.t_id})\r\n                }}>ID</th>\r\n\r\n              {/* onClick={() => {\r\n                  // toggleDefaultSort(!defaultSort)\r\n                 setSorter({sorter: (a,b) => a.t_id - b.t_id})\r\n                }} */}\r\n              <th onClick={() => {\r\n\r\n                if(asc){\r\n                  toggleDefaultSort(false)\r\n                 setSorter({sorter: (a,b) => b.total - a.total}) \r\n                 toggleAsc(false)\r\n                }  \r\n                else {\r\n                  toggleDefaultSort(false)\r\n                 setSorter({sorter: (a,b) => a.total - b.total})\r\n                 toggleAsc(true)\r\n                }\r\n                    \r\n                  \r\n                }}>Total</th>\r\n              <th onClick={() => {\r\n                if(isPaid){\r\n                  toggleDefaultSort(false)\r\n                 setSorter({sorter: (a,b) => b.paid - a.paid})\r\n                }\r\n                }}>Paid</th>\r\n              <th onClick={() => {\r\n                if(isPaid){\r\n                  toggleDefaultSort(!defaultSort)\r\n                 setSorter({sorter: (a,b) => a.t_id - b.t_id})\r\n                 toggleIsPaid(false)\r\n                } else {\r\n                  toggleDefaultSort(!defaultSort)\r\n                 setSorter({sorter: (a,b) => b.t_id - a.t_id})\r\n                 toggleIsPaid(true)\r\n\r\n                }\r\n                  \r\n                }}>Time</th>\r\n              <th onClick={() => {\r\n                  toggleDefaultSort(false)\r\n                if(aToZ){\r\n                  setSorter({sorter: function(a, b){\r\n                  if(a.first_name.length > 0 && a.first_name < b.first_name) { return -1;}\r\n                  if(a.first_name.length > 0 && a.first_name > b.first_name) { return 1; }\r\n                  return 0;\r\n              }})\r\n                  toggleAToZ(false)\r\n                } else {\r\n                  setSorter({sorter: function(a, b){\r\n                    if(a.first_name.length > 0 && b.first_name < a.first_name) { return -1;}\r\n                    if(a.first_name.length > 0 && b.first_name > a.first_name) { return 1; }\r\n                    return 0;\r\n                }})\r\n                  toggleAToZ(true)\r\n                }\r\n\r\n                \r\n                }}>First Name</th>\r\n              <th onClick={() => {\r\n                  toggleDefaultSort(false)\r\n                if(aToZ){\r\n                  setSorter({sorter: function(a, b){\r\n                  if(a.first_name.length > 0 && a.first_name < b.first_name) { return -1;}\r\n                  if(a.first_name.length > 0 && a.first_name > b.first_name) { return 1; }\r\n                  return 0;\r\n              }})\r\n                  toggleAToZ(false)\r\n                } else {\r\n                  setSorter({sorter: function(a, b){\r\n                    if(a.first_name.length > 0 && b.first_name < a.first_name) { return -1;}\r\n                    if(a.first_name.length > 0 && b.first_name > a.first_name) { return 1; }\r\n                    return 0;\r\n                }})\r\n                  toggleAToZ(true)\r\n                }\r\n\r\n                \r\n                }}>Last Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions[0] &&\r\n              transactions.sort(\r\n                defaultSort ? (a, b) => b.t_id - a.t_id \r\n                :\r\n                sorter.sorter\r\n                )\r\n                .map((t, i) => {\r\n                  console.log(typeof t.t_date);\r\n                  return (\r\n                    <tr\r\n                      onClick={() => {\r\n                        // props.getTransactions(t.t_id)\r\n                        // selectTransaction(t);\r\n                        // toggleShowOT(true);\r\n                        props.history.push(`/transactions/${t.t_id}`)\r\n                      }}\r\n                      key={i}\r\n                    >\r\n                      <td>{t.t_id}</td>\r\n                      <td>${t.total}</td>\r\n                      <td>{t.paid ? \"True\" : \"False\"}</td>\r\n                      <td>{dateFormat(t.t_date, \"m/d/yy h:MM TT\")}</td>\r\n                      <td>{t.first_name}</td>\r\n                      <td>{t.last_name}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n          </tbody>\r\n          {/* </div> */}\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\nexport default connect(mapStateToProps, { getTransactions })(Transactions);\r\n","import React, {useState} from 'react';\r\nimport './cash.scss';\r\nimport useInput from '../../../../hooks/useInput';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Cash = (props) => {\r\n    const [amount, setAmount] = useState('');\r\n\r\n    const MySwal = withReactContent(Swal);\r\n\r\n    let total = props.order.reduce((acc, b) => acc + (+b.price * 1.088), 0).toFixed(2);\r\n\r\n    let transaction = () => {\r\n        axios.post('/api/transactions/cash', {total}).then(res => {\r\n            // props.history.push(`/transactions/${res.data.t_id}`)\r\n            props.setResFn(res.data)\r\n            props.clearCartFn()\r\n        })\r\n    }\r\n\r\n    const customerChange = (amount, total) => {\r\n        var Money = +amount - +total;\r\n        let newTotal = (Money * 100);\r\n        var Twenty = Math.floor(newTotal/2000);\r\n        newTotal -= (2000*Twenty);\r\n        var Ten = Math.floor(newTotal/1000);\r\n        newTotal -= (1000*Ten);\r\n        var Five = Math.floor(newTotal/500);\r\n        newTotal -= (500*Five);\r\n        var One = Math.floor(newTotal/100);\r\n        newTotal -= (100*One);\r\n        var Quarter = Math.floor(newTotal/25);\r\n        newTotal -= (25*Quarter);\r\n        var Dime = Math.floor(newTotal/10);\r\n        newTotal -= (10*Dime);\r\n        var Nickel = Math.floor(newTotal/5);\r\n        newTotal -= (5*Nickel);\r\n        var obj = {Money,Twenty,Ten,Five,One,Quarter,Dime,Nickel,Penny: Math.floor(newTotal)}\r\n        let myChange = Object.keys(obj).filter(k=>obj[k]).reduce((o,k)=>{\r\n            o[k] = obj[k];\r\n            return o\r\n        },{})\r\n        transaction()\r\n        props.togglePaidFn()\r\n        setAmount('')\r\n        props.clearCartFn()\r\n        return (\r\n            props.setChangeFn(myChange) \r\n        )\r\n    }\r\n\r\n    // let total = props.order.reduce((acc, b) => acc + (+b.price * 1.088), 0).toFixed(2);\r\n    // console.log(typeof total)\r\n    // console.log(change);\r\n    return (\r\n        <div id='cash-container'>\r\n            <h1>Cash</h1>\r\n            <form data-testid='cash-form'>\r\n                <div className='payment-flex'>\r\n                    <label>$</label>\r\n                    <input \r\n                        value= {amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        type='text'\r\n                        placeholder='Amount'\r\n                    />\r\n                </div>\r\n                <div className='payment-flex'>\r\n                    <input \r\n                        value={`$${total}`}\r\n                        placeholder='Total'\r\n                        readOnly\r\n                    />\r\n                </div>\r\n               <div className=\"form-actions\">\r\n                    <button \r\n                        className=\"payment-button\"\r\n                        onClick={() => customerChange(amount, total)}\r\n                    >\r\n                        PAY\r\n                    </button>\r\n                    <small>or</small>\r\n                    <button onClick={props.toggleCashFn} className='payment-button'>CARD</button>\r\n                    {/* <div>\r\n                        {change}\r\n                    </div> */}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Cash);","import React, {useState, useEffect} from 'react';\r\nimport './payment.scss';\r\nimport Cash from './Cash/Cash';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport {injectStripe, CardElement} from 'react-stripe-elements';\r\nimport Flip from 'react-reveal/Flip';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Payment = (props) => {\r\n    const [order, setOrder] = useState([]);\r\n    const [orderChange, setOrderChange] = useState({});\r\n    const [cash, setCash] = useState(false);\r\n    const [cashPaid, setCashPaid] = useState(false);\r\n    const [response, setResponse] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/co/cart').then(res => {\r\n            setOrder(res.data)\r\n        })\r\n    }, [order.length])\r\n\r\n    let submit = async (e) => {\r\n        let token = await props.stripe.createToken({name: 'Name'});\r\n        let total = order.reduce((acc, b) => acc + (+b.price * 1.088), 0).toFixed(2)\r\n        axios.post('/api/transactions', {total, token}).then(res => {\r\n            // console.log(res.data.status)\r\n            if(res.data){\r\n                axios.post('/api/email').then(res => console.log('email sent'))\r\n                props.history.push(`/transactions/${res.data.t_id}`)\r\n                MySwal.fire({\r\n                    icon: 'success',\r\n                    title: 'Congrats...',\r\n                    text: 'Order completed'\r\n                })\r\n                clearCart()\r\n            }\r\n        })\r\n    }\r\n\r\n     let clearCart = () => {\r\n        axios.delete('/api/co/cart').then(res => {\r\n            setOrder(res.data)\r\n        })\r\n    }\r\n\r\n      let setChange = (obj) => {\r\n          setOrderChange(obj)\r\n      }\r\n\r\n      let setId = (obj) => {\r\n        setResponse(obj)\r\n      }\r\n    \r\n      \r\n    let toggleCash = () => {\r\n        setCash(!cash)\r\n      }\r\n\r\n    let togglePaid = () => {\r\n          setCashPaid(!cashPaid)\r\n          setCash(false)\r\n      }\r\n\r\n    let changeCounted = () => {\r\n        props.history.push(`/transactions/${response.t_id}`)\r\n        setCashPaid(false)\r\n        // setOrderChange({})\r\n      }\r\n\r\n    //   console.log(props.stripe)\r\n    \r\n        return (\r\n            <div style={{margin: '100px'}} id='PaymentForm'>\r\n                {cash ? (\r\n                    <Flip left duration={1000}>\r\n                    <Cash cash={cash} \r\n                        toggleCashFn={toggleCash} \r\n                        togglePaidFn={togglePaid} \r\n                        setChangeFn={setChange} \r\n                        setResFn={setId}\r\n                        order={order}\r\n                        clearCartFn={clearCart}\r\n                    />\r\n                    </Flip>\r\n                ) : (\r\n                    <>\r\n                    <Flip left duration={1000}>\r\n                    <div className='card-container' data-testid='card-container'>\r\n                        <h1>Card</h1>\r\n                        <CardElement/>\r\n                        <div className=\"actions\">\r\n                            <button onClick={submit} className='payment-button'>PAY</button>\r\n                            <small>or</small>\r\n                            <button onClick={toggleCash} className='payment-button'>CASH</button>\r\n                        </div>\r\n                    </div>\r\n                    </Flip>\r\n                    </>\r\n                )}\r\n                <div className='cart-payment'>\r\n                    <h1 style={{color: '#232323', fontSize: '40px', fontWeight: 'bold'}}>\r\n                        Order\r\n                    </h1>\r\n                   <div id='order-container'>\r\n                        {order[0] && order.map((item, i) => {\r\n                            return (\r\n                                <div key={i} className='orders'>\r\n                                    <span>{item.name}</span>\r\n                                    <span>{item.price}</span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        <span style={{color: '#232323', fontSize: '20px'}}>\r\n                            Subtotal: ${\" \"}\r\n                            {order[0] &&\r\n                            order.reduce((acc, b) => acc + (+b.price), 0).toFixed(2)}\r\n                        </span>\r\n                        <span style={{color: '#232323', fontSize: '20px'}}>\r\n                            Tax: ${\" \"}\r\n                            {order[0] &&\r\n                            order.reduce((acc, b) => acc + (+b.price * 0.088), 0).toFixed(2)}\r\n                        </span>\r\n                        <span style={{color: '#232323', fontSize: '20px', fontWeight: 'bold'}}>\r\n                            Total: ${\" \"}\r\n                            {order[0] &&\r\n                            order.reduce((acc, b) => acc + (+b.price * 1.088), 0).toFixed(2)}\r\n                        </span>\r\n                   </div>\r\n                   <button onClick={() => props.history.goBack()}>GO BACK</button>\r\n                </div>\r\n                {cashPaid ? (\r\n                    <div id=\"change-display\">\r\n                        <span>\r\n                          <div className='change-flex'>\r\n                          <div>\r\n                                  <p>Change:{' '}</p>\r\n                                  <p>${+orderChange.Money.toFixed(2)}</p>\r\n\r\n                              </div>\r\n                              <div>\r\n                                  <p>Twenty:{' '}</p>\r\n                                  <p>{orderChange.Twenty}</p>\r\n                              </div>\r\n                              <div>\r\n                                  <p>Ten:{' '}</p>\r\n                                  <p>{orderChange.Ten}</p>\r\n                              </div>\r\n                              <div>\r\n                                  <p>Five:{' '}</p>\r\n                                  <p>{orderChange.Five}</p>\r\n                              </div>\r\n                              <div>\r\n                                  <p>One:{' '}</p>\r\n                                  <p>{orderChange.One}</p>\r\n                              </div>\r\n                              <div>\r\n                                  <p>Quarter:{' '}</p>\r\n                                  <p>{orderChange.Quarter}</p>\r\n                              </div>\r\n                              <div>\r\n                                  <p>Dime:{' '}</p>\r\n                                  <p>{orderChange.Dime}</p>\r\n                              </div>\r\n                              <div>\r\n                                  <p>Nickel:{' '}</p>\r\n                                  <p>{orderChange.Nickel}</p>\r\n                              </div>\r\n                              <div>\r\n                                  <p>Penny:{' '}</p>\r\n                                  <p>{orderChange.Penny}</p>\r\n                              </div>\r\n                          </div>\r\n                          <button onClick={() => changeCounted()}>Okay</button>\r\n                        </span>\r\n                    </div>\r\n                ) : null }\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default injectStripe(Payment);","export default __webpack_public_path__ + \"static/media/RobotoMono-Regular.47313723.ttf\";","import \"./receipt.scss\";\r\nimport React, { Component } from \"react\";\r\nimport font from './RobotoMono-Regular.ttf'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\n// import \"./OneTransaction.scss\";\r\nimport dateFormat from \"dateformat\";\r\nimport {\r\n  Document,\r\n  Page,\r\n  Font,\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  PDFViewer\r\n} from \"@react-pdf/renderer\";\r\nFont.register({\r\n  family: 'Roboto Mono',\r\n  fonts: [\r\n    {\r\n      src: font\r\n    }\r\n  ]\r\n})\r\n// Font.register({ family: 'Roboto Mono', src: `\\RobotoMono-Regular.ttf`, fontStyle: 'normal',fontWeight: 'normal'})\r\nclass Receipt extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      transaction: []\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.getOneTransaction();\r\n  };\r\n  getOneTransaction = () => {\r\n    Axios.get(`/api/transactions/${this.props.match.params.t_id}`).then(res => {\r\n      this.setState({ transaction: res.data });\r\n      console.log(this.state.transaction);\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    const styles = StyleSheet.create({\r\n      \r\n      oneTransactionContainer: {\r\n        // backgroundColor: 'green',\r\n        boxSizing: \"border-box\",\r\n        // width: \"100vw\",\r\n        // display: \"flex\",\r\n        // flexDirection: 'row',\r\n        // justifyContent: \"center\",\r\n        // paddingTop: \"50px\"\r\n      },\r\n      receiptContainer: {\r\n        // backgroundColor: 'yellow',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        // justifyContent: \"center\",\r\n        alignItems: 'center',\r\n        // border: \"1mm solid black\",\r\n        width: \"100vw\",\r\n        boxSizing: \"border-box\",\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"10px 20px\",\r\n        fontSize: '12pt',\r\n        fontFamily: 'Roboto Mono'\r\n      },\r\n      receiptItemAndPrice: {\r\n        // backgroundColor: 'red',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n        boxSizing: \"border-box\"\r\n        \r\n      },\r\n      allReceiptItems: {\r\n        width: '100%',\r\n        borderTop: \"1mm solid #408cff\",\r\n        borderBottom: \"1mm solid #408cff\",\r\n        padding: \"5px\",\r\n        marginTop: \"5px\"\r\n      },\r\n      subtotalTotalContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        // backgroundColor: 'lightblue',\r\n        width: '100%'\r\n      }\r\n      \r\n\r\n\r\n\r\n    \r\n    });\r\n    console.log(this.props);\r\n    const { transaction } = this.state;\r\n    return (\r\n      <PDFViewer style={{width: '100vw', height: '100vh', marginTop: '50px'}}>\r\n       {transaction[0] ? \r\n          <Document>\r\n          <Page size='A6'\r\n          // tsyle={{ backgroundColor: 'tomato' }} \r\n          >\r\n            <View \r\n            style={styles.oneTransactionContainer}\r\n            className=\"one-transaction-container\"\r\n            \r\n            >\r\n              {/* {transaction[0] ? ( */}\r\n                <View\r\n                  style={styles.receiptContainer}\r\n                 \r\n                >\r\n                  <Text>Receipt #: {transaction[0].t_id}</Text>\r\n                  <Text>\r\n                    Customer:{\" \"}\r\n                    {transaction[0].first_name.length > 0 ? (\r\n                      <View>\r\n                        {transaction[0].first_name +\r\n                          \" \" +\r\n                          transaction[0].last_name}\r\n                      </View>\r\n                    ) : (\r\n                      \"None\"\r\n                    )}\r\n                  </Text>\r\n                  <Text>\r\n                    {dateFormat(transaction.t_date, \"m/d/yy h:MM TT\")}\r\n                  </Text>\r\n                  <View \r\n                   style={styles.allReceiptItems}className=\"all-receipt-items\">\r\n                    {transaction.map((o, i) => {\r\n                      return (\r\n                        <View\r\n                        style={styles.receiptItemAndPrice}\r\n                        className=\"receipt-item-and-price\" key={i}>\r\n                          <Text>{o.name}</Text>\r\n                          <Text>{o.price}</Text>\r\n                        </View>\r\n                      );\r\n                    })}\r\n                  </View>\r\n                  <View \r\n                   style={styles.subtotalTotalContainer}\r\n                  className=\"subtotal-total-container\">\r\n                    <Text>\r\n                      Subtotal: $\r\n                      {transaction\r\n                        .reduce((ac, cv) => {\r\n                          return ac + parseInt(cv.price);\r\n                        }, 0)\r\n                        .toFixed(2)}\r\n                    </Text>\r\n                    <Text>\r\n                      Tax: $\r\n                      {(\r\n                        +transaction[0].total -\r\n                        transaction.reduce((ac, cv) => {\r\n                          return ac + parseInt(cv.price);\r\n                        }, 0)\r\n                      ).toFixed(2)}\r\n                    </Text>\r\n                    <Text>\r\n                      Total: ${transaction[0].total}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              {/* ) \r\n              : (\r\n                <Text>loading...</Text>\r\n              )} */}\r\n            </View>\r\n          </Page>\r\n        </Document>\r\n     :\r\n     <Document>\r\n     <Page size=\"A4\">\r\n       <View>\r\n         <Text>Loading...</Text>\r\n       </View>\r\n     </Page>\r\n   </Document>\r\n      }\r\n           </PDFViewer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Receipt);\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n\r\n// import { withRouter } from \"react-router-dom\";\r\n// import Axios from \"axios\";\r\n\r\n// // import \"./OneTransaction.scss\";\r\n// import dateFormat from \"dateformat\";\r\n// import {\r\n//   Document,\r\n//   Page,\r\n//   Text,\r\n//   View,\r\n//   StyleSheet,\r\n//   PDFViewer\r\n// } from \"@react-pdf/renderer\";\r\n\r\n// class Receipt extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       transaction: []\r\n//     };\r\n//   }\r\n//   componentDidMount = () => {\r\n//     this.getOneTransaction();\r\n//   };\r\n//   getOneTransaction = () => {\r\n//     Axios.get(`/api/transactions/${this.props.match.params.t_id}`).then(res => {\r\n//       this.setState({ transaction: res.data });\r\n//       console.log(this.state.transaction);\r\n//     });\r\n//   };\r\n//   render() {\r\n//     console.log(this.props);\r\n//     const { transaction } = this.state;\r\n//     return (\r\n//       <PDFViewer>\r\n        // <Document>\r\n        //   <Page size=\"A4\">\r\n        //     <View className=\"one-transaction-container\">\r\n        //       {transaction[0] ? (\r\n        //         <View\r\n        //           className=\"receipt-container\"\r\n        //           style={{ marginTop: \"50px\" }}\r\n        //         >\r\n        //           <View>Receipt #: {transaction[0].t_id}</View>\r\n        //           <Text>\r\n        //             Customer:{\" \"}\r\n        //             {transaction[0].first_name.length > 0 ? (\r\n        //               <View>\r\n        //                 {transaction[0].first_name +\r\n        //                   \" \" +\r\n        //                   transaction[0].last_name}\r\n        //               </View>\r\n        //             ) : (\r\n        //               \"None\"\r\n        //             )}\r\n        //           </Text>\r\n        //           <Text>\r\n        //             {dateFormat(transaction.t_date, \"m/d/yy h:MM TT\")}\r\n        //           </Text>\r\n        //           <View className=\"all-receipt-items\">\r\n        //             {transaction.map((o, i) => {\r\n        //               return (\r\n        //                 <View className=\"receipt-item-and-price\" key={i}>\r\n        //                   <Text>{o.name}</Text>\r\n        //                   <Text>{o.price}</Text>\r\n        //                 </View>\r\n        //               );\r\n        //             })}\r\n        //           </View>\r\n        //           <View className=\"subtotal-total-container\">\r\n        //             <Text>\r\n        //               Subtotal: $\r\n        //               {transaction\r\n        //                 .reduce((ac, cv) => {\r\n        //                   return ac + parseInt(cv.price);\r\n        //                 }, 0)\r\n        //                 .toFixed(2)}\r\n        //             </Text>\r\n        //             <Text>\r\n        //               Tax: $\r\n        //               {(\r\n        //                 +transaction[0].total -\r\n        //                 transaction.reduce((ac, cv) => {\r\n        //                   return ac + parseInt(cv.price);\r\n        //                 }, 0)\r\n        //               ).toFixed(2)}\r\n        //             </Text>\r\n        //             <Text>\r\n        //               <strong>Total: ${transaction[0].total}</strong>\r\n        //             </Text>\r\n        //           </View>\r\n        //         </View>\r\n        //       ) : (\r\n        //         <Text>loading...</Text>\r\n        //       )}\r\n        //     </View>\r\n        //   </Page>\r\n        // </Document>\r\n//            </PDFViewer>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default withRouter(Receipt);\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Document,\r\n  Page,\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  PDFViewer\r\n} from \"@react-pdf/renderer\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst PdfTest = props => {\r\n  const styles = StyleSheet.create({\r\n    page: {\r\n      flexDirection: \"row\"\r\n    },\r\n    section: {\r\n      flexGrow: 1\r\n    }\r\n  });\r\n\r\n  const MyDocument = (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={styles.section}>\r\n          <Text>Hello World!</Text>\r\n        </View>\r\n        <View style={styles.section}>\r\n          <Text>We're inside a PDF!</Text>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n//   ReactDOM.render(\r\n//     <PDFViewer>{MyDocument}</PDFViewer>,\r\n//     document.getElementById(\"root\")\r\n//   );\r\n  return <div style={{marginTop: '50px'}}>\r\n      hi\r\n      <div ><PDFViewer style={{width: '100vw', height: '100vh'}}>{MyDocument}</PDFViewer></div>\r\n      </div>;\r\n};\r\n\r\nexport default PdfTest;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./admin.scss\";\r\n\r\nconst Admin = (props) => {\r\n  \r\n  if (!props.employee.employee.is_admin) {\r\n    return <Redirect from='/admin' to='/' />\r\n}\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <div className=\"product-management-div\">\r\n        <Link to=\"/admin/addproduct\">\r\n          <div className=\"add-product\">add product</div>\r\n        </Link>\r\n\r\n        <Link to=\"/admin/manageproducts\">\r\n          <div className=\"manage-products\">manage products</div>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"employee-management-div\">\r\n        <Link to=\"/admin/addemployee\">\r\n          <div className=\"add-employee\">add employee</div>\r\n        </Link>\r\n\r\n        <Link to=\"/admin/deleteemployee\">\r\n          <div className=\"delete-employee\">delete employee</div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Admin);\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport \"./addproduct.scss\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nfunction AddProduct() {\r\n  const [name, bindName, resetName] = useInput(\"\");\r\n  const [p_image, bindP_image, resetP_image] = useInput(\"\");\r\n  const [price, bindPrice, resetPrice] = useInput(\"\");\r\n  const [p_type, setType] = useState(\"scoops\");\r\n  const [available, setAvailable] = useState(true);\r\n\r\n  const MySwal = withReactContent(Swal);\r\n\r\n\r\n  let setNewProduct = () => {\r\n    axios\r\n      .post(\"/api/products\", {\r\n        name,\r\n        p_image,\r\n        price,\r\n        p_type,\r\n        available\r\n      })\r\n      .then(response => {\r\n        // console.log(response, \"response\");\r\n        // alert(\"New product added\");\r\n\r\n        MySwal.fire({\r\n          icon: \"success\",\r\n          title: \"Success!\",\r\n          text: \"New product added\"\r\n        });\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Product not added\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-product-box\">\r\n      <h1 className=\"new-product-title\">add new product</h1>\r\n      <section className=\"new-product-inputs\">\r\n        <input placeholder=\"name\" {...bindName} type=\"text\" />\r\n        <input placeholder=\"image url\" {...bindP_image} type=\"url\" />\r\n        <input placeholder=\"price\" {...bindPrice} type=\"number\" />\r\n        <select\r\n          onChange={e => setType(e.target.value)}\r\n          className=\"product-type-dropdown\"\r\n          value={p_type}\r\n        >\r\n          <option value=\"scoops\" selected>\r\n            scoops\r\n          </option>\r\n          <option value=\"soft-serve\">soft-serve</option>\r\n          <option value=\"toppings\">toppings</option>\r\n          <option value=\"cones\">cones</option>\r\n        </select>\r\n\r\n        <label className=\"new-product-availability\" htmlFor=\"available\">\r\n          product available?\r\n          <select\r\n          className=\"product-available-dropdown\"\r\n\r\n            onChange={e => setAvailable(e.target.value)}\r\n            value={available}\r\n          >\r\n            <option value=\"true\">true</option>\r\n            <option value=\"false\">false</option>\r\n          </select>\r\n        </label>\r\n\r\n        {/* \r\n      <input \r\n        onChange={() => setAvailable(true)} \r\n        type='checkbox'\r\n        value={available}\r\n        */}\r\n\r\n        <div\r\n          className=\"add-product-btn\"\r\n          onClick={() => {\r\n            setNewProduct();\r\n            resetName();\r\n            resetP_image();\r\n            resetPrice();\r\n          }}\r\n        >\r\n          add product\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddProduct;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"../../redux/reducers/productReducer\";\r\nimport \"./product.scss\";\r\n\r\nconst Product = props => {\r\n  const [edit, isEditing] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [p_image, setP_image] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [p_type, setType] = useState(\"\");\r\n  const [editItem, setEditItem] = useState({});\r\n  const [available, setAvailable] = useState(true);\r\n\r\n  const { products } = props.product;\r\n\r\n  useEffect(() => {\r\n    setName(editItem.name);\r\n    setP_image(editItem.p_image);\r\n    setPrice(editItem.price);\r\n    setType(editItem.p_type);\r\n  }, [editItem.name, editItem.p_image, editItem.price, editItem.p_type]);\r\n\r\n  let select = i => {\r\n    setEditItem(i);\r\n    isEditing(!edit);\r\n  };\r\n\r\n  let handleSave = () => {\r\n    const { p_id } = editItem;\r\n    props.editProduct(p_id, { name, p_image, price, p_type, available });\r\n    cancel();\r\n  };\r\n\r\n  let cancel = () => {\r\n    setName(\"\");\r\n    setP_image(\"\");\r\n    setPrice(\"\");\r\n    setType(\"\");\r\n    isEditing(false);\r\n    setEditItem({});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!edit ? (\r\n        <div className=\"edit-organize-box\">\r\n          <div className=\"product-labels-box\">\r\n            <label className=\"product-labels\">product name</label>\r\n            <span>{props.p.name}</span>\r\n            <label className=\"product-labels\">product price</label>\r\n\r\n            <span>${props.p.price} </span>\r\n            <label className=\"product-labels\">product type</label>\r\n\r\n            <span>{props.p.p_type}</span>\r\n            <label className=\"product-labels\">product available</label>\r\n\r\n            <span>{props.p.available ? \"true\" : \"false\"}</span>\r\n          </div>\r\n\r\n          <div className=\"edit-btn-box\">\r\n            <div className=\"edit-product-btn\" onClick={() => select(props.p)}>\r\n              edit product\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        //  <div\r\n        //     onClick={() =>\r\n        //       props.deleteProduct(\r\n        //         props.p,\r\n        //         window.confirm(\r\n        //           \"Are you sure you would like to delete this product?\"\r\n        //         )\r\n        //       ) && props.deleteProduct(props.p)\r\n        //     }\r\n        //   >\r\n        //     Delete Product\r\n        //   </div>\r\n\r\n        <div>\r\n          <input\r\n            className=\"edit-product-name\"\r\n            onChange={e => setName(e.target.value)}\r\n            value={name}\r\n          />\r\n          <input\r\n            className=\"edit-product-img\"\r\n            onChange={e => setP_image(e.target.value)}\r\n            value={p_image}\r\n          />\r\n          <input\r\n            className=\"edit-product-price\"\r\n            onChange={e => setPrice(e.target.value)}\r\n            value={price}\r\n          />\r\n\r\n          <select\r\n            onChange={e => setType(e.target.value)}\r\n            className=\"product-type-dropdown\"\r\n            value={p_type}\r\n          >\r\n            <option value=\"scoops\">scoops</option>\r\n            <option value=\"soft-serve\">soft-serve</option>\r\n            <option value=\"toppings\">toppings</option>\r\n            <option value=\"cones\">cones</option>\r\n          </select>\r\n\r\n          <label className=\"new-product-availability\" htmlFor=\"available\">\r\n            product available?\r\n            <select\r\n          className=\"product-available-dropdown\"\r\n\r\n              onChange={e => setAvailable(e.target.value)}\r\n              value={available}\r\n            >\r\n              <option value=\"true\">true</option>\r\n              <option value=\"false\">false</option>\r\n            </select>\r\n          </label>\r\n\r\n          <div className=\"save-cancel-btns\">\r\n            <div\r\n              className=\"save-edits-btn\"\r\n              onClick={() => {\r\n                handleSave();\r\n              }}\r\n            >\r\n              save edits\r\n            </div>\r\n\r\n            <div className=\"cancel-edits-btn\" onClick={() => cancel()}>\r\n              cancel\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProducts })(Product);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"../../redux/reducers/productReducer\";\r\nimport Product from \"./Product\";\r\nimport \"./manageproducts.scss\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst ManageProducts = props => {\r\n  const { products } = props.product;\r\n\r\n  const MySwal = withReactContent(Swal);\r\n\r\n\r\n  useEffect(() => {\r\n    getAllProducts();\r\n  }, [products.length]);\r\n\r\n  let getAllProducts = () => {\r\n    axios.get(\"/api/product\").then(res => props.getProducts(res.data));\r\n  };\r\n\r\n  const editProduct = (id, p) => {\r\n    axios\r\n      .put(`/api/products/${id}`, p)\r\n      .then(res => {\r\n        // console.log(res.data);\r\n\r\n        MySwal.fire({\r\n          icon: \"success\",\r\n          title: \"Success!\",\r\n          text: \"Product updated\"\r\n        });\r\n\r\n        // alert(\"Product updated\");\r\n        getAllProducts()\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  // const deleteProduct = p => {\r\n  //   axios\r\n  //     .delete(`/api/products/${p.p_id}`)\r\n  //     .then(res => {\r\n  //       getAllProducts()\r\n  //     })\r\n  //     .catch(error => console.log(error));\r\n  // };\r\n\r\n  return (\r\n    <div className='manage-products-box'>\r\n      <div className='stats'>\r\n      <div className='product-count'>current number of products: {products.length}</div>\r\n      </div>\r\n      <div className='wrap-all-products'>\r\n      {products.sort((a, b) => b.p_id - a.p_id).map((p, i) => {\r\n        return (\r\n          <div className=\"product-display-box\" key={i}>\r\n\r\n\r\n          <div className='product-img-box'>\r\n          <img className=\"product-img\" src={p.p_image} />\r\n            </div>\r\n\r\n              <div className='product-wrapper'>\r\n            <Product\r\n              key={i}\r\n              p={p}\r\n              editProduct={editProduct} \r\n              // deleteProduct={deleteProduct}\r\n              />\r\n              </div>\r\n          </div>\r\n        );\r\n      })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProducts })(ManageProducts);\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport \"./addemployee.scss\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\n\r\nfunction AddEmployee(props) {\r\n  const [username, bindUserName, resetUsername] = useInput(\"\");\r\n  const [password, bindPassword, resetPassword] = useInput(\"\");\r\n  const [is_admin, setIsAdmin] = useState(false);\r\n  \r\n  const MySwal = withReactContent(Swal);\r\n\r\n\r\n  let setNewEmployee = () => {\r\n    axios\r\n      .post(\"/api/admin/users\", {\r\n        username,\r\n        password,\r\n        is_admin\r\n      })\r\n      .then(res => {\r\n        // alert(\"New employee added\");\r\n        console.log('hit', res)\r\n        MySwal.fire({\r\n          icon: \"success\",\r\n          title: \"Success!\",\r\n          text: \"New employee added\"\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Employee not added\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-employee-box\">\r\n      <h1 className=\"new-employee-title\">add new employee</h1>\r\n      <input placeholder=\"username\" {...bindUserName} />\r\n      <input placeholder=\"password\" type=\"password\" {...bindPassword} />\r\n      <label className=\"admin-access\" htmlFor=\"is_admin\">\r\n        admin access\r\n        <input\r\n          onChange={() => setIsAdmin(!is_admin)}\r\n          type=\"checkbox\"\r\n          value=\"is_admin\"\r\n        />\r\n      </label>\r\n      <div\r\n        className=\"add-employee-btn\"\r\n        onClick={() => {\r\n          setNewEmployee();\r\n          resetUsername();\r\n          resetPassword();\r\n          MySwal.fire({\r\n            icon: \"success\",\r\n            title: \"Success!\",\r\n            text: \"New employee added\"\r\n          });\r\n          props.history.push('/admin');\r\n        }}\r\n      >\r\n        add employee\r\n      </div>\r\n      <span className=\"checkmark\"></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEmployee;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEmployee } from \"../../redux/reducers/employeeReducer\";\r\nimport \"./deleteemployee.scss\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nconst DeleteEmployee = props => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n  }, [users.length]);\r\n\r\n  let getAllEmployees = () => {\r\n    axios.get(\"/api/admin/users\").then(res => setUsers(res.data));\r\n  };\r\n\r\n  const deleteEmployee = user_id => {\r\n    axios\r\n      .delete(`/api/admin/users/${user_id}`)\r\n      .then(res => {\r\n        // console.log(res.data)\r\n    \r\n        getAllEmployees();\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className='del-employee-page'>\r\n      <div className=\"del-employee-title\">delete employee</div>\r\n\r\n      <div className=\"del-employee-box\">\r\n        {users.map((user, i) => {\r\n          return (\r\n            <div className=\"employee-box\">\r\n              <label for=\"username\">username: </label>\r\n              <div className=\"employee-name\" key={i}>\r\n                {user.username}\r\n              </div>\r\n              <div\r\n                className=\"del-employee-btn\"\r\n                onClick={e =>\r\n                  // window.confirm(\r\n                  //   \"Are you sure you would like to delete this employee?\"\r\n                  // ) && \r\n\r\n                  Swal.fire({\r\n                    title: 'Are you sure?',\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#3085d6',\r\n                    cancelButtonColor: '#d33',\r\n                    confirmButtonText: 'Delete!'\r\n                  }).then((result) => {\r\n                    if (result.value) {\r\n                      Swal.fire(\r\n                        'Deleted!',\r\n                        'Employee has been deleted.',\r\n                        'success'\r\n                      )\r\n                      && deleteEmployee(user.user_id)\r\n                    }\r\n                  })\r\n                  \r\n                  \r\n                }\r\n                // style={{marginTop: '50px'}}\r\n              >\r\n                delete employee\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = reduxState => {\r\n  return reduxState;\r\n};\r\n\r\nexport default connect(mapStateToProps, { getEmployee })(DeleteEmployee);\r\n","  \r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Authentication from './Components/Authentication/Authentication';\r\nimport Customers from './Components/Customers/Customers'; \r\nimport EditCustomer from './Components/Customers/EditCustomer'; \r\nimport Checkout from './Components/Employee/Checkout/Checkout'; \r\nimport Transactions from './Components/Transactions/Transactions';\r\nimport OneTransaction from './Components/Transactions/OneTransaction/OneTransaction';\r\n// import Printer from './Components/Transactions/OneTransaction/Printer';\r\n\r\nimport Payment from './Components/Employee/Payment/Payment';\r\nimport Receipt from './Components/Employee/Payment/Receipt/Receipt';\r\nimport PdfTest from './Components/Employee/Payment/Receipt/PdfTest';\r\n\r\nimport Admin from './Components/Admin/Admin';\r\nimport AddProduct from './Components/Admin/AddProduct';\r\nimport ManageProducts from './Components/Admin/ManageProducts';\r\nimport AddEmployee from './Components/Admin/AddEmployee';\r\nimport DeleteEmployee from './Components/Admin/DeleteEmployee';\r\n// import OneTransaction from './Components/Transactions/OneTransaction/OneTransaction';\r\n\r\nexport default (\r\n    <Switch>\r\n        <Route exact path='/' component={Authentication} />\r\n        <Route path='/customers/:c_id' component={EditCustomer}/>\r\n        <Route path='/customers' component={Customers} />\r\n        <Route path='/checkout' component={Checkout} />\r\n        <Route exact path='/transactions' component={Transactions} />\r\n        <Route path='/transactions/:t_id' component={OneTransaction} />\r\n        {/* <Route path='/transactions/:t_id' component={Printer} /> */}\r\n        <Route path='/payment' component={Payment}/>\r\n        <Route path='/receipt/:t_id' component={Receipt}/>\r\n\r\n\r\n\r\n\r\n        <Route path='/pdf' component={PdfTest}/>\r\n\r\n\r\n\r\n\r\n        {/* ----------ADMIN PAGE ROUTES---------- */}\r\n\r\n        <Route exact path='/admin' component={Admin} />\r\n\r\n        <Route path='/admin/addproduct' component={AddProduct} />\r\n        <Route path='/admin/manageproducts' component={ManageProducts} />\r\n        <Route path='/admin/addemployee' component={AddEmployee} />\r\n        <Route path='/admin/deleteemployee' component={DeleteEmployee} />\r\n    </Switch>\r\n);","import React from 'react';  \r\nimport {Link } from 'react-router-dom'; \r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport './header.css'\r\nimport MonetaLogo from '../../img/simplelogo.png';\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    const logout = () => {\r\n        axios.post('/api/auth/logout')\r\n    }\r\n\r\n    return(\r\n        <header className='nav-bar'>\r\n            <img id='header-logo' src={MonetaLogo} alt='moneta logo' />\r\n            <div className='nav-buttons'>\r\n            {props.employee.employee.is_admin ? \r\n                <Link className='nav-button' to='/admin'>Admin</Link>\r\n                : null\r\n            }\r\n                <Link className='nav-button' to='/checkout'>Checkout</Link>\r\n                <Link className='nav-button' to='/customers'>Customers</Link>\r\n                <Link className='nav-button' to='/transactions'>Transactions</Link> \r\n                <Link onClick={logout} className='nav-button' to='/'>Log Out</Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => {\r\n    return reduxState;\r\n  };\r\n\r\nexport default connect(mapStateToProps)(Header); \r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport routes from './routes';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {getEmployee} from './redux/reducers/employeeReducer';\r\nimport Header from './Components/Header/Header'; \r\nimport {Elements} from 'react-stripe-elements';\r\n\r\n\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    axios.get('/api/auth/checkSession').then(res => {\r\n      props.getEmployee(res.data)\r\n    })\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Elements>\r\n        {props.location.pathname === '/' ? (\r\n          <>\r\n            {routes}\r\n          </>\r\n        ) : (\r\n          <>\r\n          <Header />\r\n          {routes}\r\n          </>\r\n        )}\r\n        </Elements>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(connect(null, {getEmployee})(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n    search: ''\r\n}\r\n\r\nexport default function searchReducer(state = initialState, action){\r\n    const {type, payload} = action;\r\n    switch(type){\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport promiseMiddleware from 'redux-promise-middleware'\r\nimport employeeReducer from './reducers/employeeReducer';\r\nimport productReducer from './reducers/productReducer';\r\nimport customerReducer from './reducers/customerReducer';\r\nimport transactionsReducer from './reducers/transactionsReducer';\r\nimport searchReducer from './reducers/searchReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    employee: employeeReducer,\r\n    product: productReducer,\r\n    customer: customerReducer,\r\n    transactions: transactionsReducer,\r\n    search: searchReducer\r\n});\r\n\r\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(promiseMiddleware)));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {StripeProvider} from 'react-stripe-elements';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n<StripeProvider apiKey={process.env.REACT_APP_STRIPE_KEY}>\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>\r\n</StripeProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}